version: 2.1
executors:
  setup:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:3.0.2-browsers
        environment:
          BUNDLER_VERSION: 2.1.4
          RAILS_ENV: test
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: root
          MYSQL_PASSWORD: password
      - image: circleci/mysql:8.0.26
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        environment:
          MYSQL_ROOT_PASSWORD: password
jobs:
  build:
    executor: setup
    steps:
      - checkout
      - run:
          name: Copy Environments
          command: cp ./api/.env.default ./api/.env
      - run:
          name: bundle install
          command: |
            cd api
            bundle install -j4
      - save_cache:
          key: gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./api/vendor/bundle
      - persist_to_workspace:
          root: ./api
          paths:
            - vendor/bundle
  rubocop:
    executor: setup
    steps:
      - checkout
      - attach_workspace:
          at: ./api
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
  rspec:
    executor: setup
    steps:
      - checkout
      - run:
          name: wait mysql
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: create database
          command: bundle exec rake db:create
      - run:
          name: migrate
          command: bundle exec rails db:migrate
      - run:
          name: Rspec
          command: |
            cd api
            bundle exec rspec
      - store_test_results:
          path: ./api/tmp/test-results

workflows:
  version: 2
  main:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - rspec:
          requires:
            - build
            - rubocop
